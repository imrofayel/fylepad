/** @type {import('tailwindcss').Config} */
module.exports = {
  dark: ['class'],
  content: [
    "./components/**/*.{js,vue,ts}",
    "./layouts/**/*.vue",
    "./pages/**/*.vue",
    "./plugins/**/*.{js,ts}",
    "./app.vue",
    "./error.vue",
  ],
  theme: {
    extend: {
      colors: {
        background: "hsl(var(--background))",
        primary: "hsl(var(--primary))",
        surfaceTint: "hsl(var(--surface-tint))",
        onPrimary: "hsl(var(--on-primary))",
        primaryContainer: "hsl(var(--primary-container))",
        opaque: "hsl(var(--opaque))",
        onPrimaryContainer: "hsl(var(--on-primary-container))",
        secondary: "hsl(var(--secondary))",
        onSecondary: "hsl(var(--on-secondary))",
        secondaryContainer: "hsl(var(--secondary-container))",
        onSecondaryContainer: "hsl(var(--on-secondary-container))",
        tertiary: "hsl(var(--tertiary))",
        onTertiary: "hsl(var(--on-tertiary))",
        tertiaryContainer: "hsl(var(--tertiary-container))",
        onTertiaryContainer: "hsl(var(--on-tertiary-container))",
        error: "hsl(var(--error))",
        onError: "hsl(var(--on-error))",
        errorContainer: "hsl(var(--error-container))",
        onErrorContainer: "hsl(var(--on-error-container))",
        background: "hsl(var(--background))",
        onBackground: "hsl(var(--on-background))",
        surface: "hsl(var(--surface))",
        onSurface: "hsl(var(--on-surface))",
        surfaceVariant: "hsl(var(--surface-variant))",
        onSurfaceVariant: "hsl(var(--on-surface-variant))",
        outline: "hsl(var(--outline))",
        outlineVariant: "hsl(var(--outline-variant))",
        shadow: "hsl(var(--shadow))",
        scrim: "hsl(var(--scrim))",
        inverseSurface: "hsl(var(--inverse-surface))",
        inverseOnSurface: "hsl(var(--inverse-on-surface))",
        inversePrimary: "hsl(var(--inverse-primary))",
        primaryFixed: "hsl(var(--primary-fixed))",
        onPrimaryFixed: "hsl(var(--on-primary-fixed))",
        primaryFixedDim: "hsl(var(--primary-fixed-dim))",
        onPrimaryFixedVariant: "hsl(var(--on-primary-fixed-variant))",
        secondaryFixed: "hsl(var(--secondary-fixed))",
        onSecondaryFixed: "hsl(var(--on-secondary-fixed))",
        secondaryFixedDim: "hsl(var(--secondary-fixed-dim))",
        onSecondaryFixedVariant: "hsl(var(--on-secondary-fixed-variant))",
        tertiaryFixed: "hsl(var(--tertiary-fixed))",
        onTertiaryFixed: "hsl(var(--on-tertiary-fixed))",
        tertiaryFixedDim: "hsl(var(--tertiary-fixed-dim))",
        onTertiaryFixedVariant: "hsl(var(--on-tertiary-fixed-variant))",
        surfaceDim: "hsl(var(--surface-dim))",
        surfaceBright: "hsl(var(--surface-bright))",
        surfaceContainerLowest: "hsl(var(--surface-container-lowest))",
        surfaceContainerLow: "hsl(var(--surface-container-low))",
        surfaceContainer: "hsl(var(--surface-container))",
        surfaceContainerHigh: "hsl(var(--surface-container-high))",
        surfaceContainerHighest: "hsl(var(--surface-container-highest))",
      },
    },
  },
  plugins: [],
};